# image: gcr.io/felafax-training/roadrunner-jax:latest_v2
FROM python:3.10

LABEL project="roadrunner-jax"

# env vars
ENV CLONE_REPO=1
ENV TORCH_XLA=0
ENV JAX=1
ENV UID=0

# Install system dependencies
RUN apt-get update && apt-get -y upgrade && apt-get install -y --no-install-recommends \
  cmake \
  curl \
  wget \
  sudo \
  gnupg \
  libsm6 \
  libxext6 \
  libxrender-dev \
  lsb-release \
  ca-certificates \
  build-essential \
  git \
  libgl1 \ 
  vim \
  && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade jax
RUN pip install jax[tpu] -f https://storage.googleapis.com/jax-releases/libtpu_releases.html

WORKDIR /home/

# Install Python packages from requirements.txt
RUN pip install --no-cache-dir --upgrade pip

# Install required libs
# pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir transformers==4.43.3 -U
RUN pip install --no-cache-dir datasets==2.18.0
RUN pip install --no-cache-dir trl==0.8.1 peft==0.10.0
RUN pip install --no-cache-dir accelerate==0.28.0
RUN pip install --no-cache-dir jupyterlab
RUN pip install --no-cache-dir ansible
RUN pip install --no-cache-dir flax
RUN pip install --no-cache-dir einops
RUN pip install --no-cache-dir optax
RUN pip install --no-cache-dir chex
RUN pip install --no-cache-dir absl-py

# Install gcsfuse
RUN export GCSFUSE_REPO=gcsfuse-`lsb_release -c -s` && \
  echo "deb https://packages.cloud.google.com/apt $GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list && \
  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
  apt-get update && \
  apt-get install -y gcsfuse

# Install Google Cloud CLI
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
  apt-get update && apt-get install -y google-cloud-cli

# gcloud storage key
RUN mkdir /home/.gcloud_key
COPY storage_key.json /home/.gcloud_key/storage_key.json
RUN chmod 600 /home/.gcloud_key/storage_key.json

# Authenticate gcloud
RUN gcloud auth activate-service-account --key-file=/home/.gcloud_key/storage_key.json


# Create startup script
RUN mkdir /scripts
COPY misc/docker/startup.sh /scripts/startup.sh
RUN chmod +x /scripts/startup.sh



# Command to run when the container starts
CMD ["/scripts/startup.sh"]
