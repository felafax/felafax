[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "felafax"
version = "1.0.12"
description = "felafax"
authors = ["Nithin <nithin@felafax.ai>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/felafax/felafax"
repository = "https://github.com/felafax/felafax"
documentation = "https://github.com/felafax/felafax"
packages = [{include = "felafax", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
datasets = ">=2.18.0"
transformers = ">=4.43"
requests = "*"
fsspec = "<2024.10.0"
numpy = "*"
typing-extensions = "*"
urllib3 = "*"
aiofiles = "*"
cloudpickle = "*"
pytest = "*"
ruff = "*"
typeguard = "*"
memory-profiler = "*"
jax = "0.4.38"
jaxlib = "0.4.38"
equinox = "*"
optax = "*"
orbax-checkpoint = ">=0.10.1"
accelerate = "*"
quax = "*"
einops = "*"
jaxtyping = "*"
ml-dtypes = "*"
ml-collections = "*"
huggingface-hub = "*"
sentencepiece = "*"
matplotlib = "*"
tqdm = "*"
gcsfs = "*"
pyrallis = "*"
absl-py = "*"
python-dotenv = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"

# [[tool.poetry.source]]
# name = "pytorch"
# url = "https://download.pytorch.org/whl/cpu"
# priority = "explicit"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/felafax/felafax/issues"

[tool.ruff]
line-length = 81
indent-width = 4

[tool.ruff.lint]
ignore = ["C901", "E741", "F402", "F823", "E731"]

[tool.lint.select]
select = ["C", "E", "F", "I", "W"]

exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.lint.isort]
lines-after-imports = 2

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
