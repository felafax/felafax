# image: gcr.io/felafax-training/roadrunner-torchxla:latest_v2
# For TPU v3-8, use pt-xla-2.3
FROM us-central1-docker.pkg.dev/tpu-pytorch-releases/docker/xla:r2.3.0_3.10_tpuvm

LABEL project="roadrunner-torchxla"

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH ./
ENV DEBIAN_FRONTEND=noninteractive
ENV PIP_ROOT_USER_ACTION=ignore

# env vars
ENV CLONE_REPO=1
ENV TORCH_XLA=1
ENV JAX=0
ENV UID=0


# Install system dependencies
RUN apt-get update && apt-get -y upgrade && apt-get install -y --no-install-recommends \
  cmake \
  curl \
  wget \
  sudo \
  gnupg \
  libsm6 \
  libxext6 \
  libxrender-dev \
  lsb-release \
  ca-certificates \
  build-essential \
  git \
  libgl1 \ 
  && rm -rf /var/lib/apt/lists/*

# Download libtpu.so
RUN curl -L https://storage.googleapis.com/cloud-tpu-tpuvm-artifacts/libtpu1.8.0/libtpu.so -o /lib/libtpu.so
WORKDIR /home/

# Install Python packages
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir transformers==4.43.3 -U
RUN pip install --no-cache-dir datasets==2.18.0
RUN pip install --no-cache-dir trl==0.8.1 peft==0.10.0
RUN pip install --no-cache-dir accelerate==0.28.0
RUN pip install --no-cache-dir jupyterlab
RUN pip install --no-cache-dir torch~=2.3.0 torch_xla[tpu]~=2.3.0 torchvision -f https://storage.googleapis.com/libtpu-releases/index.html
RUN pip install --no-cache-dir ansible

# Install gcsfuse
RUN export GCSFUSE_REPO=gcsfuse-`lsb_release -c -s` && \
  echo "deb https://packages.cloud.google.com/apt $GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list && \
  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
  apt-get update && \
  apt-get install -y gcsfuse

# Install Google Cloud CLI
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
  apt-get update && apt-get install -y google-cloud-cli

# gcloud storage key
RUN mkdir /home/.gcloud_key
COPY storage_key.json /home/.gcloud_key/storage_key.json
RUN chmod 600 /home/.gcloud_key/storage_key.json

# Authenticate gcloud
RUN gcloud auth activate-service-account --key-file=/home/.gcloud_key/storage_key.json
RUN mkdir "/home/felafax-storage/"
RUN mkdir "/home/felafax-storage-eu/"


# Create startup script
RUN mkdir /scripts
COPY misc/docker/startup.sh /scripts/startup.sh
RUN chmod +x /scripts/startup.sh

# Command to run when the container starts
CMD ["/scripts/startup.sh"]
